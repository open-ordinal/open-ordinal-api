{"version":3,"file":"open-ordinal-api.min.js","mappings":"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","sources":["webpack://@open-ordinal/api/webpack/runtime/create fake namespace object","webpack://@open-ordinal/api/./node_modules/@open-ordinal/metadata/lib/OOMD.js","webpack://@open-ordinal/api/./node_modules/events/events.js","webpack://@open-ordinal/api/webpack/bootstrap","webpack://@open-ordinal/api/webpack/runtime/define property getters","webpack://@open-ordinal/api/webpack/runtime/hasOwnProperty shorthand","webpack://@open-ordinal/api/webpack/runtime/make namespace object","webpack://@open-ordinal/api/./lib/models/utilities/Export.js","webpack://@open-ordinal/api/./lib/models/base/Ordinal.js","webpack://@open-ordinal/api/./lib/models/base/Audio.js","webpack://@open-ordinal/api/./lib/models/utilities/Export/Sprite.js","webpack://@open-ordinal/api/./lib/models/globals/Variant.js","webpack://@open-ordinal/api/./lib/models/globals/Composition.js","webpack://@open-ordinal/api/./lib/models/globals/Asset.js","webpack://@open-ordinal/api/./lib/models/globals/Trait.js","webpack://@open-ordinal/api/./lib/models/base/Image.js","webpack://@open-ordinal/api/./lib/models/base/Video.js","webpack://@open-ordinal/api/./lib/models/usecases/Collection.js","webpack://@open-ordinal/api/./lib/loaders/codec.js","webpack://@open-ordinal/api/./lib/loaders/Track.js","webpack://@open-ordinal/api/./lib/loaders/Release.js","webpack://@open-ordinal/api/./lib/loaders/Artist.js","webpack://@open-ordinal/api/./node_modules/cbor-x/decode.js","webpack://@open-ordinal/api/./node_modules/cbor-x/encode.js","webpack://@open-ordinal/api/./lib/OOAPI.Core.js","webpack://@open-ordinal/api/./lib/OOAPI.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","\"use strict\";\n/*!\n * Open Ordinal Metadata\n *\n * @author   Open Ordinal <https://openordinal.dev>\n * @license  MIT\n */\n/**\n * @module OOMD\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=OOMD.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export var ExportType;\n(function (ExportType) {\n    ExportType[\"ORDINAL\"] = \"ordinal\";\n    ExportType[\"DATA\"] = \"data\";\n    ExportType[\"BLOB\"] = \"blob\";\n    ExportType[\"RENDERER\"] = \"renderer\";\n})(ExportType || (ExportType = {}));\nexport function getExportType(ex) {\n    if (ex instanceof Blob) {\n        return ExportType.BLOB;\n    }\n    else if (typeof ex === 'string') {\n        if (ex.startsWith('data:')) {\n            return ExportType.DATA;\n        }\n        else if (ex.startsWith('blob:')) {\n            return ExportType.BLOB;\n        }\n        else {\n            return ExportType.ORDINAL;\n        }\n    }\n    throw new Error(\"Unsupported export type\");\n}\nexport class Exportable {\n    constructor(onExport) {\n        this.onExport = onExport;\n    }\n    canExport() {\n        return typeof this.onExport !== 'undefined';\n    }\n    async export() {\n        if (!this.onExport) {\n            throw new Error(\"Nothing to export!\");\n        }\n        const exported = await this.onExport();\n        if (exported instanceof Blob) {\n            return URL.createObjectURL(exported);\n        }\n        switch (getExportType(exported)) {\n            case ExportType.BLOB:\n                return exported;\n            case ExportType.DATA:\n                return exported;\n            case ExportType.ORDINAL:\n                return '/content/' + exported;\n            case ExportType.RENDERER:\n                throw new Error(\"Renderer export type is not supported\");\n        }\n    }\n}\n//# sourceMappingURL=Export.js.map","/**\n * Ordinal Class\n */\nexport var OrdinalType;\n(function (OrdinalType) {\n    // Audio\n    OrdinalType[\"AUDIO\"] = \"audio\";\n    // Video\n    OrdinalType[\"VIDEO\"] = \"video\";\n    // Image\n    OrdinalType[\"IMAGE\"] = \"image\";\n    // 3D\n    OrdinalType[\"MODEL\"] = \"3dmodel\";\n    // Pure Text\n    OrdinalType[\"TEXT\"] = \"text\";\n    // Multi (Advanced - Can be multiple types)\n    OrdinalType[\"MULTI\"] = \"multi\";\n})(OrdinalType || (OrdinalType = {}));\nexport class Ordinal {\n    constructor(options = {}) {\n        this.id = options.id ?? '';\n        this.transactionStamp = options.transactionStamp ?? null;\n        this.info = options.info ?? null;\n        this.metaData = options.metaData ?? null;\n    }\n    getId() {\n        return this.id;\n    }\n    getTransactionStamp() {\n        return this.transactionStamp;\n    }\n    getInfo() {\n        return this.info;\n    }\n    getMetaData() {\n        return this.metaData;\n    }\n}\n//# sourceMappingURL=Ordinal.js.map","/**\n * Audio Class\n */\nexport var AudioType;\n(function (AudioType) {\n    AudioType[\"Album\"] = \"Album\";\n    AudioType[\"Artist\"] = \"Artist\";\n    AudioType[\"Track\"] = \"Track\";\n})(AudioType || (AudioType = {}));\nexport class Audio {\n    constructor(audioData = {}) {\n        this.url = audioData.url;\n        this.type = audioData.type;\n    }\n    getUrl() {\n        return this.url;\n    }\n    getType() {\n        return this.type;\n    }\n}\n//# sourceMappingURL=Audio.js.map","import { Exportable } from \"../Export.js\";\n/*\n * Sprite Class\n */\nexport var SpriteType;\n(function (SpriteType) {\n    SpriteType[\"GridByCell\"] = \"gridbycell\";\n})(SpriteType || (SpriteType = {}));\nexport class SpriteAnimation {\n    constructor(data) {\n        this.name = data.name;\n        this.frames = data.frames;\n        this.loop = data.loop ?? true;\n    }\n}\nexport class Sprite {\n    constructor(spriteData) {\n        this.rows = 1;\n        this.cells = 1;\n        this.offset = { x: 0, y: 0 };\n        this.padding = { x: 0, y: 0 };\n        this.type = SpriteType.GridByCell;\n        this.rows = spriteData.rows;\n        this.cells = spriteData.cells;\n        this.offset = spriteData.offset ?? this.offset;\n        this.padding = spriteData.padding ?? this.padding;\n        this.source = new Exportable(spriteData.sourceExport);\n        this.actions = spriteData.actions;\n    }\n    ;\n}\n//# sourceMappingURL=Sprite.js.map","import { ExportType, Exportable, getExportType } from '../utilities/Export.js';\n/**\n * Variant Class\n * A Variant is a variant of the ordinal. It's a visual distinct visual representation.\n * It can be 2D and / or 3D or any other variation. Not to be confused with Composition.\n */\nexport class Variant extends Exportable {\n    constructor(options) {\n        super(options.onExport);\n        this.type = options.type;\n        this.id = options.id;\n        this.name = options.name;\n        this.onDisplay = options.onDisplay;\n        this.onHide = options.onHide;\n    }\n    async show() {\n        if (this.onDisplay) {\n            await this.onDisplay();\n        }\n        else if (this.onExport) {\n            const ex = await this.onExport();\n            if (getExportType(ex) === ExportType.ORDINAL) {\n                const frame = document.createElement('iframe');\n                frame.src = `/preview/${ex}`;\n                frame.frameBorder = \"0\";\n                frame.style.border = \"none\";\n                frame.style.outline = \"none\";\n                frame.style.overflow = \"hidden\";\n                frame.style.width = \"100%\";\n                frame.style.height = \"100%\";\n                frame.style.position = \"fixed\";\n                frame.style.top = \"0\";\n                frame.style.left = \"0\";\n                frame.style.bottom = \"0\";\n                frame.style.right = \"0\";\n                frame.style.margin = \"0\";\n                frame.style.padding = \"0\";\n                frame.style.zIndex = \"999999\";\n                frame.scrolling = \"no\";\n                document.body.style.border = \"0\";\n                document.body.appendChild(frame);\n            }\n        }\n    }\n    async hide() {\n        if (this.onHide) {\n            await this.onHide();\n        }\n        else if (this.canExport()) {\n            document.body.innerHTML = '';\n        }\n    }\n}\n//# sourceMappingURL=Variant.js.map","import { Exportable } from \"../utilities/Export.js\";\n/**\n * A Composition in the Open Ordinal API is a single image as a combination\n * of assets. This can be a single image with different assets combined (staged).\n *\n * Examples of what a Composition can be:\n * - Single image composed of multiple assets\n * - Animated GIF\n * - Rigged of multiple assets\n * - PFP (With background),\n * - PFP (No background)\n * - PFP Theme\n * - and so on...\n */\nexport class Composition extends Exportable {\n    constructor(options) {\n        super(options.onExport);\n        this.id = options.id;\n        this.name = options.name;\n    }\n}\n//# sourceMappingURL=Composition.js.map","/**\n * Asset Class\n * Assets an Ordinal exposes to be used by externals e.g. Sprites,\n */\n/**\n * An Asset in the Open Ordinal API is a single asset the ordinal expose.\n * This can be a single image or different pars a image consists of.\n * If you expose multiple assets to compose a Composition eaach of these\n * are considered an Asset.\n *\n * An Asset is defined when the ordinal want to expose them. One reason\n * to expose these is to give the user of an ordinal the option to bring\n * these to other platforms (i.e. games, remixing and other).\n */\nexport class Asset {\n    constructor(options) {\n        this.id = options.id;\n        this.type = options.type;\n        this.name = options.name;\n        if (typeof options.data === \"string\") {\n            this.data = async () => options.data;\n        }\n        else {\n            this.data = options.data;\n        }\n    }\n    getType() {\n        return this.type;\n    }\n    getName() {\n        return this.name;\n    }\n    getId() {\n        return this.id;\n    }\n    async getData() {\n        if (this.data) {\n            return await this.data();\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=Asset.js.map","export class Trait {\n    constructor(options) {\n        this.id = options.id;\n        this.name = options.name;\n        this.value = options.value;\n    }\n}\n//# sourceMappingURL=Trait.js.map","/**\n * Image Class\n */\nexport class Image {\n    constructor(options = {}) {\n        this.url = options.url;\n        this.width = options.width;\n        this.height = options.height;\n        this.description = options.description;\n    }\n    getUrl() {\n        return this.url;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getDescription() {\n        return this.description;\n    }\n}\n//# sourceMappingURL=Image.js.map","/**\n * Video Class\n */\nexport class Video {\n    constructor(options = {}) {\n        this.url = options.url;\n        this.duration = options.duration;\n        this.format = options.format;\n        this.resolution = options.resolution;\n    }\n    getUrl() {\n        return this.url;\n    }\n    getDuration() {\n        return this.duration;\n    }\n    getFormat() {\n        return this.format;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n//# sourceMappingURL=Video.js.map","/**\n * Collection Class\n */\n/**\n * A Collection is usually defined as a ordinal collection. This class\n * expose the trais that are available for the Collection.\n */\nexport class Collection {\n    constructor(options) {\n        this.collectionTraits = [];\n        this.id = options.id;\n        this.name = options.name;\n        this.description = options.description;\n        this.collectionTraits = (options.collectionTraits || []).map(trait => new CollectionTrait(trait));\n    }\n    addTraitCategory(category) {\n        this.collectionTraits.push(new CollectionTrait(category));\n    }\n}\n/**\n * A CollectionTrait is the specific traits available for a Collection.\n */\nexport class CollectionTrait {\n    constructor(options) {\n        this.id = options.id;\n        this.name = options.name;\n        this.traitNames = options.traitNames;\n    }\n}\n//# sourceMappingURL=Collection.js.map","const decoders = {};\n/**\n * Fetches and returns a decoder function for a given ID.\n *\n * @param {string} id - The ID of the decoder to fetch.\n * @returns {Promise<DecoderFunction>} - A promise that resolves with the decoder function.\n */\nexport async function getDecoder(id) {\n    // Check if the decoder for the given ID is already cached\n    if (decoders[id] == undefined) {\n        // If not cached, import the decoder module dynamically\n        decoders[id] = import(/* webpackIgnore: true */ `/content/${id}`);\n    }\n    // Await the import and return the default export as the decoder function\n    return (await decoders[id]).default;\n}\n/**\n * Encodes an AudioBuffer into a WAV file format.\n *\n * @category Core\n * @param {AudioBuffer} audioBuffer - The audio buffer to encode.\n * @returns {ArrayBuffer} - The encoded WAV file as an ArrayBuffer.\n */\nexport function encodeWAV(audioBuffer) {\n    let numOfChan = audioBuffer.numberOfChannels, // Number of audio channels\n    length = audioBuffer.length * numOfChan * 2 + 44, // Calculate the length of the WAV file\n    buffer = new ArrayBuffer(length), // Create a buffer to hold the WAV file data\n    view = new DataView(buffer), // Create a DataView to manipulate the buffer\n    channels = [], // Array to hold the audio data for each channel\n    i, sample, offset = 0, pos = 0;\n    // Write WAV container header\n    setUint32(0x46464952); // \"RIFF\" in ASCII\n    setUint32(length - 8); // File length - 8\n    setUint32(0x45564157); // \"WAVE\" in ASCII\n    setUint32(0x20746d66); // \"fmt \" in ASCII\n    setUint32(16); // Length of format data\n    setUint16(1); // Format type (PCM)\n    setUint16(numOfChan); // Number of channels\n    setUint32(audioBuffer.sampleRate); // Sample rate\n    setUint32(audioBuffer.sampleRate * 2 * numOfChan); // Byte rate\n    setUint16(numOfChan * 2); // Block align\n    setUint16(16); // Bits per sample\n    setUint32(0x61746164); // \"data\" in ASCII\n    setUint32(length - pos - 4); // Data length\n    // Write interleaved audio data\n    for (i = 0; i < audioBuffer.numberOfChannels; i++) {\n        channels.push(audioBuffer.getChannelData(i)); // Get audio data for each channel\n    }\n    while (pos < length) {\n        for (i = 0; i < numOfChan; i++) {\n            // Interleave channels\n            sample = Math.max(-1, Math.min(1, channels[i][offset])); // Clamp sample value\n            sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // Scale to 16-bit signed int\n            view.setInt16(pos, sample, true); // Write 16-bit sample\n            pos += 2;\n        }\n        offset++; // Move to the next sample\n    }\n    return buffer; // Return the encoded WAV file buffer\n    // Helper function to write a 16-bit unsigned integer to the DataView\n    function setUint16(data) {\n        view.setUint16(pos, data, true);\n        pos += 2;\n    }\n    // Helper function to write a 32-bit unsigned integer to the DataView\n    function setUint32(data) {\n        view.setUint32(pos, data, true);\n        pos += 4;\n    }\n}\n//# sourceMappingURL=codec.js.map","import { getMetadata, getParentsAll, getLatestId, cached } from '../OOAPI.js';\nimport { Artist } from \"./Artist.js\";\nimport { Release } from \"./Release.js\";\nimport { getDecoder, encodeWAV } from \"./codec.js\";\nexport class Track {\n    constructor() {\n        // Title of the track\n        this.title = \"\";\n        // Array to hold artist information\n        this.artists = [];\n        // Release information for the track\n        this.release = new Release();\n        // Duration of the track in seconds\n        this.duration = 0.0;\n        // URL for the audio file\n        this.audioURL = \"\";\n        // Flag to indicate if data is loaded\n        this._loaded = true;\n        // Media metadata for the track\n        this.mm = {};\n    }\n    // Private static method to load a track by its ID\n    static async _load(_id) {\n        let track = new Track();\n        track._loaded = false;\n        // Get the latest ID for the track\n        track.id = await getLatestId(_id);\n        // Fetch metadata for the track\n        let metadata = await getMetadata(track.id);\n        // Ensure metadata is in the correct format\n        let tm = typeof (metadata?.track) === \"object\" ? metadata.track : metadata;\n        track.mm = typeof (metadata?.media) === \"object\" ? metadata.media : metadata;\n        // Assign duration and title from metadata\n        track.duration = track.mm?.duration ?? 0;\n        track.title = tm?.title ?? `<${track.id}>`;\n        // Process release information\n        const release = tm?.releases && tm.releases[0]; // TODO: should be array?\n        if (release) {\n            if (typeof release === \"string\") {\n                // If release is a string, create a new Release instance\n                const rel = new Release();\n                rel.title = release;\n                track.release = rel;\n            }\n            else {\n                // If release is an object, load or create a new Release instance\n                const id = \"@id\" in release && release[\"@id\"];\n                if (id) {\n                    const rel = await Release.load(id);\n                    track.release = rel;\n                }\n                else {\n                    const rel = new Release();\n                    Object.assign(rel, release);\n                    track.release = rel;\n                }\n            }\n        }\n        else {\n            // If no release in metadata, fetch parent releases\n            const parents = await getParentsAll(track.id);\n            track.release = await Release.load(parents[0]);\n        }\n        // Process artists information\n        const artists = tm?.artists;\n        if (artists) {\n            for (var artist of artists) {\n                if (typeof artist === \"string\") {\n                    // If artist is a string, create a new Artist instance\n                    const art = new Artist();\n                    art.name = artist;\n                    track.artists.push(art);\n                }\n                else {\n                    // If artist is an object, load or create a new Artist instance\n                    const id = \"@id\" in artist && artist[\"@id\"];\n                    if (id) {\n                        const art = await Artist.load(id);\n                        track.artists.push(art);\n                    }\n                    else {\n                        const art = new Artist();\n                        Object.assign(art, artist);\n                        track.artists.push(art);\n                    }\n                }\n            }\n        }\n        else {\n            // If no artists in metadata, use artists from the release\n            track.artists = track.release.artists;\n        }\n        return track;\n    }\n    // Method to load data for the track\n    async loadData() {\n        // If data is already loaded, return the track\n        if (this._loaded) {\n            return this;\n        }\n        // Check if a decoder is available\n        let decoder = this.mm.decoder;\n        if ((decoder && \"@id\" in decoder)) {\n            // Fetch and decode the audio data\n            const decode = await getDecoder(decoder[\"@id\"]);\n            const encodedData = await fetch(`/content/${this.id}`);\n            const decodedData = await decode(await encodedData.arrayBuffer(), this.mm);\n            if (decodedData.audioBuffer) {\n                // Encode the decoded audio data to WAV format\n                const wavData = encodeWAV(await decodedData.audioBuffer());\n                const blob = new Blob([wavData], { type: \"audio/wav\" });\n                // Create a URL for the audio blob\n                this.audioURL = URL.createObjectURL(blob);\n            }\n        }\n        else if ((decoder && \"@sat\" in decoder)) {\n            // TODO: This.\n        }\n        else {\n            // If no decoder, use the raw audio URL\n            const url = `/content/${this.id}`;\n            const audio = new Audio(url);\n            // Wait for the audio metadata to load\n            await new Promise((resolve, reject) => { audio.onloadedmetadata = () => resolve(); });\n            // Set the duration and audio URL\n            this.duration = audio.duration;\n            this.audioURL = url;\n        }\n        // Mark data as loaded\n        this._loaded = true;\n        return this;\n    }\n}\n// Static method to load a track, using a cached version of the _load method\nTrack.load = cached(Track._load);\n;\n//# sourceMappingURL=Track.js.map","import { getInscription, getMetadata, getChildrenAll, getParentsAll, getLatestId, cached } from '../OOAPI.js';\nimport { Artist } from \"./Artist.js\";\nimport { Track } from \"./Track.js\";\nexport class Release {\n    constructor() {\n        // Title of the release\n        this.title = \"\";\n        // Type of the release (e.g., album, single, etc.)\n        this.type = \"\";\n        // Release date\n        this.date = new Date();\n        // Array to hold artist information\n        this.artists = [];\n        // URL for the cover image\n        this.coverURL = \"\";\n        // Array to hold track information\n        this.tracks = [];\n        // Flag to indicate if data is loaded\n        this._loaded = true;\n    }\n    // Private static method to load a release by its ID\n    static async _load(_id) {\n        const release = new Release();\n        release._loaded = false;\n        // Get the latest ID for the release\n        release.id = await getLatestId(_id);\n        // Fetch metadata for the release\n        let metadata = await getMetadata(release.id);\n        // Ensure metadata is in the correct format\n        let md = typeof (metadata?.release) === \"object\" ? metadata.release : metadata;\n        // Assign tracks and other properties from metadata\n        release._tracks = md.tracks;\n        release.title = md.title ?? `<${release.id}>`;\n        release.type = md.type ?? \"collection\";\n        // Process artists information\n        const artists = md.artists;\n        if (artists) {\n            for (let artist of artists) {\n                if (typeof artist === \"string\") {\n                    // If artist is a string, create a new Artist instance\n                    const art = new Artist();\n                    art.name = artist;\n                    release.artists.push(art);\n                }\n                else {\n                    // If artist is an object, load or create a new Artist instance\n                    const id = \"@id\" in artist && artist[\"@id\"];\n                    if (id) {\n                        const art = await Artist.load(id);\n                        release.artists.push(art);\n                    }\n                    else {\n                        const art = new Artist();\n                        Object.assign(art, artist);\n                        release.artists.push(art);\n                    }\n                }\n            }\n        }\n        else {\n            // If no artists in metadata, fetch parent artists\n            const parents = await getParentsAll(release.id);\n            for (let id of parents) {\n                const art = await Artist.load(id);\n                release.artists.push(art);\n            }\n        }\n        // Fetch inscription and set release date and cover URL\n        const inscription = await getInscription(release.id);\n        release.date = new Date(md.date ?? (inscription.timestamp ?? 0) * 1000);\n        release.coverURL = md.cover && \"@id\" in md.cover ? `/content/${md.cover[\"@id\"]}` : Release.fallbackCover;\n        return release;\n    }\n    // Getter for the primary artist\n    get artist() {\n        return this.artists[0];\n    }\n    // Getter for the release year\n    get year() {\n        return this.date.getFullYear();\n    }\n    // Getter for the total duration of all tracks\n    get duration() {\n        var totalDuration = 0;\n        for (var track of this.tracks) {\n            totalDuration += track.duration;\n        }\n        return totalDuration;\n    }\n    // Method to load data for the release\n    async loadData() {\n        // If data is already loaded, return the release\n        if (this._loaded) {\n            return this;\n        }\n        // Process tracks information\n        const tracks = this._tracks;\n        if (tracks) {\n            for (let track of tracks) {\n                const id = \"@id\" in track && track[\"@id\"];\n                if (id) {\n                    // Load track by ID\n                    const tra = await Track.load(id);\n                    this.tracks.push(tra);\n                }\n                else {\n                    // Create a new Track instance and assign properties\n                    const tra = new Track();\n                    Object.assign(tra, track);\n                    this.tracks.push(tra);\n                }\n            }\n        }\n        else {\n            // If no tracks in metadata, fetch child tracks\n            const parents = await getChildrenAll(this.id);\n            for (let id of parents) {\n                const tra = await Track.load(id);\n                this.tracks.push(tra);\n            }\n        }\n        // Mark data as loaded\n        this._loaded = true;\n        return this;\n    }\n}\n// Static property to hold the fallback cover URL\nRelease.fallbackCover = \"\";\n// Static method to load a release, using a cached version of the _load method\nRelease.load = cached(Release._load);\n;\n//# sourceMappingURL=Release.js.map","import { getMetadata, getChildrenAll, getLatestId, cached } from \"../OOAPI.js\";\nimport { Release } from \"./Release.js\";\n/**\n * Represents an artist and provides methods to load and manage artist data.\n */\nexport class Artist {\n    constructor() {\n        this.name = \"\"; // The name of the artist\n        this.releases = []; // An array to store the artist's releases\n        this._loaded = true; // Flag to indicate if the artist data is loaded\n    }\n    /**\n     * Loads an artist by ID.\n     * @param {string} _id - The ID of the artist to load.\n     * @returns {Promise<Artist>} - A promise that resolves to the loaded artist.\n     */\n    static async _load(_id) {\n        const artist = new Artist();\n        artist._loaded = false;\n        // Get the latest ID for the artist\n        artist.id = await getLatestId(_id);\n        // Fetch and assign metadata for the artist\n        let metadata = await getMetadata(artist.id);\n        artist.md = typeof (metadata?.artist) === \"object\" ? metadata.artist : metadata;\n        // Set the artist's name or default to the ID if name is not available\n        artist.name = artist.md?.name ?? `<${artist.id}>`;\n        return artist;\n    }\n    /**\n     * Loads additional data for the artist, including releases.\n     * @returns {Promise<Artist>} - A promise that resolves to the artist with loaded data.\n     */\n    async loadData() {\n        if (this._loaded) {\n            return this;\n        }\n        let releases = this.md?.releases;\n        if (releases) {\n            // Load releases from metadata\n            for (var release of releases) {\n                const id = \"@id\" in release && release[\"@id\"];\n                if (id) {\n                    const rel = await Release.load(id);\n                    this.releases.push(rel);\n                }\n                else {\n                    const rel = new Release();\n                    Object.assign(rel, release);\n                    if (rel.artists.length == 0) {\n                        rel.artists.push(this); // Add this artist to the release if no artists are listed\n                    }\n                    this.releases.push(rel);\n                }\n            }\n        }\n        else {\n            // Load releases by fetching children IDs\n            for (var id of await getChildrenAll(this.id)) {\n                const rel = await Release.load(id);\n                this.releases.push(rel);\n            }\n        }\n        this._loaded = true;\n        return this;\n    }\n    /**\n     * Gets the types of releases associated with the artist.\n     * @returns {string[]} - An array of release types.\n     */\n    get releaseTypes() {\n        const types = {};\n        for (const release of this.releases) {\n            types[release.type] = true;\n        }\n        return Object.keys(types);\n    }\n    /**\n     * Gets the total duration of all tracks by the artist.\n     * @returns {number} - The total duration of all tracks.\n     */\n    get duration() {\n        var totalDuration = 0;\n        for (var track of this.tracks) {\n            totalDuration += track.duration;\n        }\n        return totalDuration;\n    }\n    /**\n     * Gets all tracks by the artist.\n     * @returns {Track[]} - An array of tracks.\n     */\n    get tracks() {\n        return this.releases.flatMap(r => r.tracks);\n    }\n}\n// Static method to load an artist, cached to avoid redundant calls\nArtist.load = cached(Artist._load);\n;\n//# sourceMappingURL=Artist.js.map","let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet maxArraySize = 112810000 // This is the maximum array size in V8. We would potentially detect and set it higher\n// for JSC, but this is pretty large and should be sufficient for most use cases\nlet maxMapSize = 16810000 // JavaScript has a fixed maximum map size of about 16710000, but JS itself enforces this,\n// so we don't need to\n\nlet maxObjectSize = 16710000; // This is the maximum number of keys in a Map. It takes over a minute to create this\n// many keys in an object, so also probably a reasonable choice there.\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) && !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared && !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r => this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end > -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues &&\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position >= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token >> 5\n\ttoken = token & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 > 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType > 1) {\n\t\t\t\t\tif (dataView.getUint32(position) > 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tif (i >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(key, read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd >= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token < 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tif (token >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i < token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (token >= maxMapSize) throw new Error(`Map size exceeds ${maxArraySize}`)\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i < token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i < token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token >= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token & 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token < 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token & 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i < currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tif (!structure) throw new Error('Structure is required in record definition');\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token >> 5\n\t\tlength = length & 0x1f\n\t\tif (length > 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ >= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key => validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i < length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\t// protect against prototype pollution\n\tif (typeof key === 'string') return key === '__proto__' ? '__proto_' : key\n\tif (typeof key === 'number' || typeof key === 'boolean' || typeof key === 'bigint') return key.toString();\n\tif (key == null) return key + '';\n\t// protect against expensive (DoS) string conversions\n\tthrow new Error('Invalid property name type ' + typeof key);\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 & 0x7f) >> 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 & 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 & 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 & 3) << 8) | byte1) / (1 << 24)\n\t\treturn (byte0 & 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 & 0x80) | // sign bit\n\t\t((exponent >> 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 & 7) << 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 >> 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 << 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0x60 && length < 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) => {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) => {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) => {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i < l; i++) {\n\t\tvalue = BigInt(buffer[i]) + (value << BigInt(8))\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) => {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) => {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) => {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) => {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i < length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) => { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) => {\n\tif (src[position++] != 0x84) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\tif (src.length < position)\n\t\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tlet newPackedValues = read() // packed values\n\tif (!newPackedValues || !newPackedValues.length) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data >= 0 ? 2 * data : (-2 * data - 1))]\n\tlet error = new Error('No support for non-integer packed references yet')\n\tif (data === undefined)\n\t\terror.incomplete = true\n\tthrow error\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) => { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet startingPosition = position\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token >> 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) {// there is a cycle, so we have to assign properties to original target\n\t\tif (Object.getPrototypeOf(target) !== Object.getPrototypeOf(targetProperties)) {\n\t\t\t// this means that the returned target does not match the targetProperties, so we need rerun the read to\n\t\t\t// have the correctly create instance be assigned as a reference, then we do the copy the properties back to the\n\t\t\t// target\n\t\t\t// reset the position so that the read can be repeated\n\t\t\tposition = startingPosition\n\t\t\t// the returned instance is our new target for references\n\t\t\ttarget = targetProperties\n\t\t\treferenceMap.set(id, { target })\n\t\t\ttargetProperties = read()\n\t\t}\n\t\treturn Object.assign(target, targetProperties)\n\t}\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) => {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) => {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n\tif (tag >= 225 && tag <= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag >= 28704 && tag <= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag >= 1879052288 && tag <= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag >= 216 && tag <= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag >= 27647 && tag <= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag >= 1811940352 && tag <= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i < typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n\t\tif (!littleEndian && bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : bytesPerElement == 8 ? 3 : 0\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tif (!currentDecoder.copyBuffers) {\n\t\t\t\t// try provide a direct view, but will only work if we are byte-aligned\n\t\t\t\tif (bytesPerElement === 1 ||\n\t\t\t\t\tbytesPerElement === 2 && !(buffer.byteOffset & 1) ||\n\t\t\t\t\tbytesPerElement === 4 && !(buffer.byteOffset & 3) ||\n\t\t\t\t\tbytesPerElement === 8 && !(buffer.byteOffset & 7))\n\t\t\t\t\treturn new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength >> sizeShift);\n\t\t\t}\n\t\t\t// we have to slice/copy here to get a new ArrayBuffer, if we are not word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length >> sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i < elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i << sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i < length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() => {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport function setSizeLimits(limits) {\n\tif (limits.maxMapSize) maxMapSize = limits.maxMapSize;\n\tif (limits.maxArraySize) maxArraySize = limits.maxArraySize;\n\tif (limits.maxObjectSize) maxObjectSize = limits.maxObjectSize;\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\n","import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures > 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap && !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r => this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength > maxSharedStructures && !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length > 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions & THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length > maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate && encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length > maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () => {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) => {\n\t\t\t\tlet threshold = options && options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count > threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared && this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition >= 0) {\n\t\t\t\t\t\tif (packedPosition < 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition & 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) >> 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) >> 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues && !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat && value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat && value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value >= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value >= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag && extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag < 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag >> 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag & 0xff\n\t\t\t\t\t\t\t\t} else if (tag > -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON && value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as a plain object\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(64)) && value >= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value > -(BigInt(1)<<BigInt(64)) && value < 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value >= BigInt(0))\n\t\t\t\t\t\t\ttarget[position++] = 0xc2 // tag 2\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc3 // tag 2\n\t\t\t\t\t\t\tvalue = BigInt(-1) - value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet bytes = [];\n\t\t\t\t\t\twhile (value) {\n\t\t\t\t\t\t\tbytes.push(Number(value & BigInt(0xff)));\n\t\t\t\t\t\t\tvalue >>= BigInt(8);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriteBuffer(new Uint8Array(bytes.reverse()), makeRoom);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object) => {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(object, skipValues) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k => this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] & 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] & 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId &= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId >= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId < maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] & 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length >= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, true); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator] && !object.buffer) { // iterator, but exclude typed arrays\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable && position > start) yield target.subarray(start, position);\n\t\t\telse if (position - start > chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start > chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options && options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared => (existingShared && existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) => this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length < 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length < 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length > 3) {\n\t\t\t\tif (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i < l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer && this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length > 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine && size > 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length < 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length < 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length >= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1)\n\tfor (let id = 0; id < idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id >> 8\n\t\t\tserialized[position] = id & 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n","/*!\n * Open Ordinal API\n *\n * @author   Open Ordinal <https://openordinal.dev>\n * @license  MIT\n * @module   OOAPI\n */\n/**\n * @module OOAPI\n */\n//#region Imports and Exports\n//Models - Base\nimport { Variant } from './models/globals/Variant.js';\nimport { Composition } from './models/globals/Composition.js';\nimport { Asset } from './models/globals/Asset.js';\nimport { Trait } from './models/globals/Trait.js';\nexport { Variant } from './models/globals/Variant.js';\nexport { Composition } from './models/globals/Composition.js';\nexport { Asset } from './models/globals/Asset.js';\nexport { Trait } from './models/globals/Trait.js';\nexport { ExportType, getExportType } from './models/utilities/Export.js';\n//Models - Globals\nimport { OrdinalType } from './models/base/Ordinal.js';\nexport { OrdinalType, Ordinal } from './models/base/Ordinal.js';\nexport { Audio } from './models/base/Audio.js';\nexport { Image } from './models/base/Image.js';\nexport { Video } from './models/base/Video.js';\nexport { SpriteType, Sprite, SpriteAnimation } from './models/utilities/Export/Sprite.js';\n//Models - Use Cases\nimport { Collection } from './models/usecases/Collection.js';\nexport { Collection } from './models/usecases/Collection.js';\nimport { AnimationManager } from './helpers/AnimationManager.js';\nexport * as OOMD from \"@open-ordinal/metadata\";\n// Loaders\nexport * from './loaders/Artist.js';\nexport * from './loaders/Release.js';\nexport * from './loaders/Track.js';\n//Imported Third-Party Modules\nimport { decode } from 'cbor-x';\nimport { EventEmitter } from 'events';\n//#endregion\n//#region Privates\nlet _baseUrl = \"\";\nlet _id = \"\";\nlet _collections = [];\nlet _variants = [];\nlet _compositions = [];\nlet _assets = [];\nlet _traits = [];\nlet _events = new EventEmitter();\nlet _type = OrdinalType.MULTI;\nlet _requestParams = new Map();\nlet _ready = false;\nlet _metadata = {};\nlet _currentVariant;\nlet _animationManager;\n//#endregion\n//#region Core Functionality - General\n/**\n * Set the internal stored Ordinal Id.\n * @category Core\n * @param {string} id Ordinal Id\n */\nexport function setId(id) { _id = id; _metadata = undefined; _type = OrdinalType.MULTI; }\n/**\n * Get the internal stored Ordinal Id.\n * @category Core\n * @returns {string} Ordinal Id\n */\nexport function getId() {\n    if (_id == null || _id == \"\") {\n        _id = getInscriptionIdFromUrl();\n    }\n    return _id;\n}\n/**\n * Set the internal stored Ordinal Type.\n * @category Core\n * @param {OrdinalType} type Ordinal Type\n */\nexport function setType(type) { _type = type; }\n/**\n * Get the internal stored Ordinal Type.\n * @category Core\n * @returns {OrdinalType} Ordinal Type\n */\nexport function getType() { return _type; }\n/**\n * Set the internal stored Metadata.\n * @category Core\n * @param {OOMD.Metadata} metadata Ordinal Metadata\n */\nexport function setMetadata(metadata) {\n    _metadata = metadata;\n}\n/**\n * Get the url parameters of the iframe.\n * @category Core\n * @returns A Map of all url parameters and it's values.\n */\nexport function getRequestParams() { return _requestParams; }\n//#endregion\n//#region Core Functionality - Recursive\n/**\n * Asynchronously retrieves the internal metadata for a given ID.\n *\n * @category Core\n * @param {string} id - The unique identifier for the metadata.\n * @returns {Promise<OOMD.Metadata>} - A promise that resolves to the metadata object.\n */\nexport async function getMetadata(id) {\n    // Check if metadata is undefined or if a new ID is provided, then fetch the metadata\n    if (_metadata == undefined || id != undefined) {\n        _metadata = await getInscriptionMetadata(id);\n    }\n    // Return the fetched or existing metadata\n    return _metadata;\n}\n/**\n * Asynchronously retrieves inscription data for a given inscription ID.\n *\n * @category Core\n * @param {string} [inscriptionId=getId()] - The unique identifier for the inscription. Defaults to the result of getId().\n * @param {string} [baseUrl=_baseUrl] - The base URL for the API endpoint. Defaults to _baseUrl.\n * @returns {Promise<any>} - A promise that resolves to the inscription data or null if the request fails.\n * @throws Will throw an error if the fetch operation fails.\n */\nexport async function getInscription(inscriptionId = getId(), baseUrl = _baseUrl) {\n    try {\n        // Fetch the inscription data from the API endpoint\n        const response = await fetch(prepareUrl(`/r/inscription/${inscriptionId}`, baseUrl));\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            return null;\n        }\n        // Parse the response as JSON\n        const json = await response.json();\n        // Return the parsed JSON data\n        return json;\n    }\n    catch (error) {\n        // Throw an error if the fetch operation fails\n        throw error;\n    }\n}\n/**\n * Asynchronously retrieves metadata for a given inscription ID.\n *\n * @category Core\n * @param {string} [inscriptionId=getId()] - The unique identifier for the inscription. Defaults to the result of getId().\n * @param {string} [baseUrl=_baseUrl] - The base URL for the API endpoint. Defaults to _baseUrl.\n * @returns {Promise<OOMD.Metadata>} - A promise that resolves to the metadata object.\n * @throws Will throw an error if the fetch operation fails or if the response is not OK.\n */\nasync function getInscriptionMetadata(inscriptionId = getId(), baseUrl = _baseUrl) {\n    // Fetch the metadata for the given inscription ID from the API endpoint\n    const response = await fetch(prepareUrl(`/r/metadata/${inscriptionId}`, baseUrl));\n    // Check if the response is not OK (status code outside the range 200-299)\n    if (!response.ok) {\n        throw new Error(\"No inscription for Id\");\n    }\n    // Parse the response as a JSON string containing hexadecimal data\n    const dataCBORasHexString = await response.json();\n    // Convert the hexadecimal string to a buffer\n    var dataAsBuffer = new Uint8Array(dataCBORasHexString.match(/[\\da-f]{2}/gi).map(function (hex) {\n        return parseInt(hex, 16);\n    }));\n    // Decode the buffer into the metadata object\n    const data = decode(dataAsBuffer);\n    // Return the decoded metadata\n    return data;\n}\n/**\n * Asynchronously retrieves SAT data for a given sat number and index.\n *\n * @category Core\n * @param {number} sat - The unique identifier for the SAT.\n * @param {number} [index=-1] - The index for the SAT data. Defaults to -1 which fetches the most recent inscription.\n * @param {string} [baseUrl=_baseUrl] - The base URL for the API endpoint. Defaults to _baseUrl.\n * @returns {Promise<any>} - A promise that resolves to the SAT data.\n */\nexport async function getSatAt(sat, index = -1, baseUrl = _baseUrl) {\n    // Fetch the satellite data from the API endpoint\n    const response = await fetch(prepareUrl(`/r/sat/${sat}/at/${index}`, baseUrl));\n    // Parse and return the response as JSON\n    return response.json();\n}\n/**\n * Asynchronously fetches the page data for a specific SAT at a given page number.\n *\n * @category Core\n * @param {number} sat - The SAT number to fetch the page data for.\n * @param {number} [page=0] - The page number to fetch. Defaults to 0.\n * @param {string} [baseUrl=_baseUrl] - Optional base URL for the fetch. Defaults to _baseUrl.\n * @returns {Promise<{ids: Array<string>, more: boolean, page: number}>} - A promise that resolves to an object containing the IDs, a boolean indicating if there are more pages, and the current page number.\n * @throws Will throw an error if the fetch operation fails or if the response is not OK.\n */\nexport async function getSatPage(sat, page = 0, baseUrl = _baseUrl) {\n    try {\n        // Fetch the page data for the given SAT number and page number from the API endpoint\n        const response = await fetch(prepareUrl(`/r/sat/${sat}/${page}`, baseUrl));\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            throw new Error('Ord API call was unsuccessful');\n        }\n        // Parse the response as JSON\n        const data = await response.json();\n        // Extract the IDs, more flag, and page data from the response\n        const ids = data.ids;\n        const more = data.more;\n        const pageData = data.page;\n        // Return the extracted data as an object\n        return { ids, more, page: pageData };\n    }\n    catch (error) {\n        // Throw an error if the fetch operation fails\n        throw error;\n    }\n}\n/**\n * Asynchronously fetches all the inscriptions on a given SAT.\n * The function fetches the inscriptions in pages and continues fetching until there are no more pages.\n *\n * @category Core\n * @param {number} sat - The SAT number to fetch the inscriptions from.\n * @param {string} [baseUrl=_baseUrl] - Optional base URL for the fetch. Defaults to _baseUrl.\n * @returns {Promise<string[]>} - A promise that resolves with an array of the IDs of the inscriptions.\n */\nexport async function getSatAll(sat, baseUrl = _baseUrl) {\n    let ids = [];\n    let more = true;\n    let page = 0;\n    while (more) {\n        // Fetch the inscriptions for the current page\n        await getSatPage(sat, page, baseUrl).then(data => {\n            if (data != null) {\n                // Concatenate the fetched IDs with the existing IDs\n                ids = ids.concat(data.ids);\n                // Check if there are more pages to fetch\n                more = data.more;\n                // Increment the page number for the next fetch\n                page++;\n            }\n        }).catch(error => {\n            // Stop fetching if an error occurs\n            more = false;\n        });\n    }\n    // Return the array of fetched IDs\n    return ids;\n}\n/**\n * Asynchronously fetches the parents of a given inscription.\n * If no inscription ID is provided, it defaults to using the ID obtained from `getId()`.\n *\n * @category Core\n * @param {string} inscriptionId - The ID of the inscription to get the parents of.\n *                                 Defaults to the ID of the page running it if none is given.\n * @param {number} page - The page number to fetch the parents from.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<{ids: Array<string>, more: boolean, page: number}>} - A promise that resolves to an object containing:\n *                                                                         - ids: An array of parent IDs.\n *                                                                         - more: A boolean indicating if there are more pages.\n *                                                                         - page: The current page number.\n */\nexport async function getParentsPage(inscriptionId = getId(), page = 0, baseUrl = _baseUrl) {\n    let ids = []; // Initialize an empty array to store parent IDs\n    let more = true; // Flag to indicate if there are more pages\n    try {\n        // Fetch the parents data from the API endpoint\n        const response = await fetch(prepareUrl(`/r/parents/${inscriptionId}/${page}`, baseUrl));\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            throw new Error('Ord API call was unsuccessful'); // Throw an error if the API call fails\n        }\n        // Parse the response as JSON\n        const data = await response.json();\n        // Concatenate the fetched IDs with the existing array\n        ids = ids.concat(data.ids);\n        // Update the 'more' flag based on the response\n        more = data.more;\n        // Update the page number based on the response\n        page = data.page;\n    }\n    catch (error) {\n        // Set 'more' to false if an error occurs\n        more = false;\n    }\n    // Return the result as an object\n    return { ids, more, page };\n}\n;\n/**\n * Asynchronously fetches all the parents of a given inscription.\n *\n * @category Core\n * @param {string} inscriptionId - The ID of the inscription to get the parents of.\n *                                 Defaults to the ID obtained from `getId()`.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<Array<string>>} - A promise that resolves with an array of the IDs of the parents.\n */\nexport async function getParentsAll(inscriptionId = getId(), baseUrl = _baseUrl) {\n    let ids = []; // Initialize an empty array to store parent IDs\n    let more = true; // Flag to indicate if there are more pages\n    let page = 0; // Initialize the page number\n    // Loop to fetch all pages of parent IDs\n    while (more) {\n        await getParentsPage(inscriptionId, page, baseUrl).then(data => {\n            if (data != null) {\n                ids = ids.concat(data.ids); // Concatenate the fetched IDs with the existing array\n                more = data.more; // Update the 'more' flag based on the response\n                page++; // Increment the page number\n            }\n        }).catch(error => {\n            more = false; // Set 'more' to false if an error occurs\n        });\n    }\n    return ids; // Return the array of parent IDs\n}\n;\n/**\n * Asynchronously fetches the children of a given inscription.\n * If no inscription ID is provided, it defaults to using the ID obtained from `getId()`.\n *\n * @category Core\n * @param {string} inscriptionId - The ID of the inscription to get the children of.\n *                                 Defaults to the ID of the page running it if none is given.\n * @param {number} page - The page number to fetch the children from.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<{ids: Array<string>, more: boolean, page: number}>} - A promise that resolves to an object containing:\n *                                                                         - ids: An array of children IDs.\n *                                                                         - more: A boolean indicating if there are more pages.\n *                                                                         - page: The current page number.\n */\nexport async function getChildrenPage(inscriptionId = getId(), page = 0, baseUrl = _baseUrl) {\n    let ids = []; // Initialize an empty array to store children IDs\n    let more = true; // Flag to indicate if there are more pages\n    try {\n        // Fetch the children data from the API endpoint\n        const response = await fetch(prepareUrl(`/r/children/${inscriptionId}/${page}`, baseUrl));\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            throw new Error('Ord API call was unsuccessful'); // Throw an error if the API call fails\n        }\n        // Parse the response as JSON\n        const data = await response.json();\n        // Concatenate the fetched IDs with the existing array\n        ids = ids.concat(data.ids);\n        // Update the 'more' flag based on the response\n        more = data.more;\n        // Update the page number based on the response\n        page = data.page;\n    }\n    catch (error) {\n        // Set 'more' to false if an error occurs\n        more = false;\n    }\n    // Return the result as an object\n    return { ids, more, page };\n}\n;\n/**\n * Asynchronously fetches all the children of a given inscription.\n *\n * @category Core\n * @param {string} inscriptionId - The ID of the inscription to get the children of.\n *                                 Defaults to the ID obtained from `getId()`.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<Array<string>>} - A promise that resolves with an array of the IDs of the children.\n */\nexport async function getChildrenAll(inscriptionId = getId(), baseUrl = _baseUrl) {\n    let ids = []; // Initialize an empty array to store children IDs\n    let more = true; // Flag to indicate if there are more pages\n    let page = 0; // Initialize the page number\n    // Loop to fetch all pages of children IDs\n    while (more) {\n        await getChildrenPage(inscriptionId, page, baseUrl).then(data => {\n            if (data != null) {\n                ids = ids.concat(data.ids); // Concatenate the fetched IDs with the existing array\n                more = data.more; // Update the 'more' flag based on the response\n                page++; // Increment the page number\n            }\n        }).catch(error => {\n            more = false; // Set 'more' to false if an error occurs\n        });\n    }\n    return ids; // Return the array of children IDs\n}\n;\n/**\n *  Asynchronously fetches all information about an inscription, including children, sat inscriptions, metadata and its id.\n * Defaults to using the ID obtained from `getId()` if an `inscriptionId` is not provided.\n * @category Core\n * @param {string} inscriptionId - Inscription to get all information.\n *                                 Defaults to the ID of the page running it if none is given.\n * @param {string} baseUrl - Optional baseUrl for the fetch\n * @returns {Promise<{inscription: {charms: Array<string>, content_type: string, content_length: number, fee: number, height: number, number: number, output: string, sat: null | string, satpoint: string, timestamp: number, value: number} | null, children: Array<string>, satIds: Array<string>, metadata: Object | null, id: <string>}>} A promise that resolves with all the information about the inscription.\n */\nexport async function getOOMD(inscriptionId = getId(), baseUrl = _baseUrl) {\n    let res = {};\n    try {\n        //TODO: Read en project OOMD\n        // const metadata = await getInscriptionMetadata(inscriptionId, baseUrl);\n        // res.metadata = metadata;\n        //res = OOMD.parse(metadata);\n    }\n    catch (error) {\n    }\n    res.id = inscriptionId;\n    return res;\n}\n;\n/**\n * Asynchronously fetches all information about an inscription, including children,\n * sat inscriptions, metadata, and its ID.\n * Defaults to using the ID obtained from `getId()` if an `inscriptionId` is not provided.\n *\n * @category Core\n * @param {string} inscriptionId - The ID of the inscription to get all information about.\n *                                 Defaults to the ID of the page running it if none is given.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<any>} - A promise that resolves with all the information about the inscription.\n */\nexport async function getAll(inscriptionId = getId(), baseUrl = _baseUrl) {\n    let res = {}; // Initialize an empty object to store the result\n    res.id = inscriptionId; // Assign the inscription ID to the result\n    try {\n        // Fetch the inscription data\n        const inscription = await getInscription(inscriptionId, baseUrl);\n        res.inscription = inscription; // Assign the fetched inscription data to the result\n        // Fetch all parent IDs\n        const parents = await getParentsAll(inscriptionId, baseUrl);\n        res.parents = parents; // Assign the fetched parent IDs to the result\n        // Fetch all children IDs\n        const children = await getChildrenAll(inscriptionId, baseUrl);\n        res.children = children; // Assign the fetched children IDs to the result\n        // Fetch all sat IDs\n        const sat = await getSatAll(inscription.sat, baseUrl);\n        res.satIds = sat; // Assign the fetched sat IDs to the result\n        // Fetch the metadata\n        const metadata = await getInscriptionMetadata(inscriptionId, baseUrl);\n        res.metadata = metadata; // Assign the fetched metadata to the result\n    }\n    catch (error) {\n        throw error; // Throw an error if any fetch operation fails\n    }\n    return res; // Return the result object containing all fetched information\n}\n;\n/**\n * Asynchronously fetches information about a specific block by block height or block hash.\n *\n * @category Core\n * @param {string} blockInfo - The block height or block hash to get information about.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<any>} - A promise that resolves with the information about the block or null if not found.\n */\nexport async function getBlockInfo(blockInfo, baseUrl = _baseUrl) {\n    const response = await fetch(prepareUrl(`/r/blockinfo/${blockInfo}`, baseUrl)); // Fetch the block information from the API\n    // Check if the response is not OK (status code outside the range 200-299)\n    if (!response.ok) {\n        if (response.status === 404) {\n            throw new Error('Ord API call returned no BlockInfo'); // Throw an error if the block is not found\n        }\n        throw new Error('Ord API call was unsuccessful'); // Throw an error if the API call fails\n    }\n    return response.json(); // Parse and return the response as JSON\n}\n;\n/**\n * Asynchronously fetches the block hash at a given block height.\n *\n * @category Core\n * @param {number} height - The height of the block to get the hash of.\n * @param {string} [baseUrl=_baseUrl] - Optional baseUrl for the fetch.\n * @returns {Promise<string | null>} - A promise that resolves with the hash of the block or null if not found.\n */\nexport async function getBlockHash(height, baseUrl = _baseUrl) {\n    const response = await fetch(prepareUrl(`/r/blockhash/${height}`, baseUrl)); // Fetch the block hash from the API\n    // Check if the response is not OK (status code outside the range 200-299)\n    if (!response.ok) {\n        if (response.status === 404) {\n            throw new Error('Ord API call returned no BlockHash'); // Throw an error if the block hash is not found\n        }\n        throw new Error('Ord API call was unsuccessful'); // Throw an error if the API call fails\n    }\n    const hash = await response.json(); // Parse and return the response as JSON\n    return hash;\n}\n;\n/**\n * Asynchronously fetches the latest block height.\n *\n * @category Core\n * @param {string} [baseUrl=_baseUrl] - The base URL for the fetch.\n * @returns {Promise<number>} - A promise that resolves with the height of the latest block.\n */\nexport async function getBlockHeight(baseUrl = _baseUrl) {\n    try {\n        // Fetch the latest block height from the API endpoint\n        const response = await fetch(prepareUrl(`/r/blockheight`, baseUrl));\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            throw new Error('Remote API call was unsuccessful'); // Throw an error if the API call fails\n        }\n        // Parse the response as text\n        const height = await response.text();\n        // Convert the height to a number and return it\n        return Number(height);\n    }\n    catch (error) {\n        // Throw an error if the fetch operation fails\n        throw error;\n    }\n}\n;\n/**\n * Asynchronously fetches the UNIX time stamp of the latest block.\n *\n * @category Core\n * @param {string} [baseUrl=_baseUrl] - The base URL for the fetch.\n * @returns {Promise<number>} - A promise that resolves with the UNIX time stamp of the latest block.\n */\nexport async function getBlockTime(baseUrl = _baseUrl) {\n    try {\n        // Fetch the UNIX time stamp of the latest block from the API endpoint\n        const response = await fetch(prepareUrl(`/r/blocktime`, baseUrl));\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            throw new Error('Network response was not ok'); // Throw an error if the API call fails\n        }\n        // Parse the response as text\n        const time = await response.text();\n        // Convert the time to a number and return it\n        return Number(time);\n    }\n    catch (error) {\n        // Throw an error if the fetch operation fails\n        throw error;\n    }\n}\n;\n/**\n * Asynchronously get the latest ID for a supplied ID through the Sat endpoint.\n *\n * @category Core\n * @param {string} id - The inscription ID.\n * @returns {Promise<string>} - A promise that resolves with the latest ID for the inscription.\n */\nexport async function getLatestId(id) {\n    // Fetch the inscription data using the provided ID\n    const inscription = await getInscription(id);\n    // Check if the inscription has a 'sat' property that is not null\n    if (inscription.sat !== null) {\n        // Fetch and return the latest ID from the Sat endpoint\n        return (await getSatAt(inscription.sat)).id;\n    }\n    // Return the original ID if 'sat' is null\n    return id;\n}\n/**\n * Asynchronously get the path for the latest inscription for a given path.\n *\n * @category Core\n * @param {string} path - The path to the inscription.\n * @returns {Promise<string>} - A promise that resolves with the path to the latest inscription.\n */\nexport async function getLatestPath(path) {\n    let prefix = new String(\"/content/\"); //Webpack workarround.\n    // Check if the path starts with \"/content/\"\n    if (path.startsWith(prefix.toString())) {\n        // Extract the ID from the path\n        let id = path.substring(prefix.length);\n        // Get the latest ID for the extracted ID\n        id = await getLatestId(id);\n        // Update the path with the latest ID\n        path = prefix + id;\n    }\n    // Return the updated path\n    return path;\n}\n/**\n * Asynchronously detects if Ordinal API Extensions is available in Origin.\n *\n * @category Core\n * @returns {Promise<boolean>} - A promise that resolves to true if the Ordinal API Extensions are available, otherwise false.\n */\nexport async function isOrdinalAPIExtensionsAvailable() {\n    // Send a HEAD request to the specified URL\n    const response = await fetch('/content/' + _id, {\n        method: 'HEAD'\n    });\n    // Check if the response headers contain \"X-Sagaverse-Ordinal-API\" and if its value is \"true\"\n    if (response.headers.get(\"X-Sagaverse-Ordinal-API\") != undefined && response.headers.get(\"X-Sagaverse-Ordinal-API\") == \"true\") {\n        return true; // Return true if the Ordinal API Extensions are available\n    }\n    return false; // Return false if the Ordinal API Extensions are not available\n}\n//#endregion\n//#region Core Functionality - Iframe\n/**\n * Detects and extracts Open Ordinal API if present in an Iframe.\n *\n * @category Core\n * @param {HTMLIFrameElement} iframe - The iframe element to check for the Open Ordinal API.\n * @returns {Promise<any>} - A promise that resolves with the Open Ordinal API if available, otherwise rejects with an error message.\n */\nexport async function getOrdinalApiFromIFrame(iframe) {\n    return new Promise((resolve, reject) => {\n        // Check if the iframe is undefined\n        if (typeof iframe === 'undefined') {\n            reject(\"iframe is invalid\"); // Reject the promise if the iframe is invalid\n            return;\n        }\n        function checkIframeLoaded() {\n            // Get a handle to the iframe document\n            var iframeDoc = iframe.contentDocument || iframe.contentWindow?.document;\n            // Check if the iframe loading is complete\n            if (typeof iframeDoc !== 'undefined' && iframeDoc.readyState == 'complete') {\n                let ordinal = iframe.contentWindow;\n                let whenLoaded = () => {\n                    let ooAPi = ordinal.ooAPI;\n                    // Check if the Open Ordinal API is available\n                    if (typeof ooAPi !== 'undefined') {\n                        // Check if the Open Ordinal API is ready\n                        if (ooAPi.isReady()) {\n                            resolve(ooAPi); // Resolve the promise with the Open Ordinal API\n                        }\n                        else {\n                            // Wait for the Open Ordinal API to be ready\n                            ooAPi.on('ready', () => {\n                                resolve(ooAPi); // Resolve the promise with the Open Ordinal API\n                            });\n                        }\n                    }\n                    else {\n                        reject(\"ooAPI not available.\"); // Reject the promise if the Open Ordinal API is not available\n                    }\n                };\n                // Check if the iframe document is fully loaded\n                if (iframeDoc.readyState == \"complete\") {\n                    whenLoaded(); // Call the whenLoaded function if the document is complete\n                }\n                else {\n                    ordinal.onload = whenLoaded; // Set the onload event to call the whenLoaded function\n                }\n                return;\n            }\n            // Retry checking the iframe loading status after 100ms\n            window.setTimeout(checkIframeLoaded, 100);\n        }\n        checkIframeLoaded(); // Initial call to checkIframeLoaded function\n    });\n}\n//#endregion\n//#region Core Functionality - Import and Fetch\n/**\n * Imports a JavaScript module.\n *\n * @category Core\n * @param {string} path - The path to the module to import.\n * @returns {Promise<any>} - A promise that resolves with the imported module.\n */\nexport async function importLatest(path) {\n    // Get the latest path for the module\n    const latestPath = await getLatestPath(path);\n    // Import the module using the latest path\n    return await import(/* webpackIgnore: true */ latestPath);\n}\n/**\n * Fetch a path and return the response.\n *\n * @category Core\n * @param {string} path - The path to fetch.\n * @returns {Promise<Response>} - A promise that resolves with the response.\n */\nexport async function fetchLatest(path) {\n    // Get the latest path for the given path\n    const latestPath = await getLatestPath(path);\n    // Fetch the resource at the latest path and return the response\n    return await fetch(latestPath);\n}\n//#endregion\n//#region Core Functionality - Cache\n/**\n * A cache helper to cache single functions and their return variable.\n *\n * @category Core\n * @param {function} func - The function to cache.\n * @returns {function} - A function which upon subsequent calls with the same id parameter returns the result from the first call.\n */\nexport function cached(func) {\n    let cache = {}; // Initialize an empty object to store cached promises\n    return id => {\n        var promise = cache[id]; // Retrieve the cached promise for the given id\n        // If no cached promise exists, call the function and cache its promise\n        if (!promise) {\n            promise = func(id);\n            cache[id] = promise;\n        }\n        // Return the cached or newly created promise\n        return promise;\n    };\n}\n//#endregion\n//#region Variants\n/**\n * Add a Variant to memory model\n * @category Variants\n * @param {Variant} variant The Variant to add\n */\nexport async function addVariant(variant) {\n    var item = new Variant(variant);\n    _variants.push(item);\n    return item;\n}\n/**\n * Remove a Variant from memory model\n * @category Variants\n * @param {Variant} variant The Variant to remove\n */\nexport async function removeVariant(variant) {\n    _variants = _variants.filter(v => v !== variant);\n}\n/**\n * Get a Variant from memory model\n * @category Variants\n * @param {Variant} variant The Variant to get\n * @returns {Variant} The Variant\n */\nexport async function getVariant(id) {\n    return _variants.find(v => v.id === id);\n}\n/**\n * Get all Variants from memory model\n * @category Variants\n * @returns {Variant[]} The Variant\n */\nexport async function getVariants() {\n    return _variants;\n}\n/**\n * Clear all Variants from memory model\n * @category Variants\n */\nexport async function clearVariants() { _variants = []; }\n/**\n * Set which Variant should be visible.\n * @category Variants\n * @param {Variant | string | number} variant - The variant that should be visible. Could be the id of a Variant, an index or a particular Variant.\n */\nexport async function setDisplayedVariant(variant) {\n    // Requested to display a given variant.\n    let nextVariant;\n    if (!variant || variant === '') {\n        // show first as default\n        nextVariant = _variants[0];\n    }\n    else if (variant == 'none') {\n        // nothing to show\n    }\n    else if (typeof variant === 'number') {\n        // select by index\n        let idx = Number(variant);\n        nextVariant = _variants[idx] ?? _variants[0];\n    }\n    else if (typeof variant === 'string') {\n        // select by id\n        nextVariant = await getVariant(variant);\n    }\n    else if (variant instanceof Variant) {\n        // select by id\n        if (variant.id != null)\n            nextVariant = await getVariant(variant.id);\n    }\n    if (nextVariant != _currentVariant) {\n        await _currentVariant?.hide();\n        _currentVariant = nextVariant;\n        await _currentVariant?.show();\n    }\n}\n/**\n * Get the currently visible Variant (if any).\n * @category Variants\n * @returns {Variant} The Variant that currently is visible.\n */\nexport async function getDisplayedVariant() {\n    return _currentVariant;\n}\n//#endregion\n//#region Compositions\n/**\n * Add a Composition to memory model\n * @category Compositions\n * @param {Composition} composition The Composition to add\n */\nexport async function addComposition(composition) {\n    var item = new Composition(composition);\n    _compositions.push(item);\n    return item;\n}\n/**\n * Remove a Composition to memory model\n * @category Compositions\n * @param {Composition} composition The Composition to remove\n */\nexport async function removeComposition(composition) {\n    _compositions = _compositions.filter(c => c !== composition);\n}\n/**\n * Get a Composition from memory model\n * @category Compositions\n * @param compositions The Composition to find\n * @returns {Composition} The Composition\n */\nexport async function getComposition(id) {\n    return _compositions.find(c => c.id === id);\n}\n/**\n * Get all Compositions from memory model\n * @category Compositions\n * @returns {Composition[]} The Compositions\n */\nexport async function getCompositions() {\n    return _compositions;\n}\n/**\n * Clear all Compositions from memory model\n * @category Compositions\n */\nexport async function clearCompositions() { _compositions = []; }\n//#endregion\n//#region Assets\n/**\n * Add an Asset to memory model\n * @category Assets\n * @param  {Asset} asset The Asset to add\n */\nexport async function addAsset(asset) {\n    var item = new Asset(asset);\n    _assets.push(item);\n    return item;\n}\n/**\n * Remove an Asset from memory model\n * @category Assets\n * @param {Asset} asset The addet to remove\n */\nexport async function removeAsset(asset) {\n    _assets = _assets.filter(a => a !== asset);\n}\n/**\n * Get an Asset from memory model\n * @category Assets\n * @param {string} id The Asset to find\n * @returns {Asset} The Asset\n */\nexport async function getAsset(id) {\n    return _assets.find(a => a.id === id);\n}\n/**\n * Get all Assets from memory model\n * @category Assets\n * @returns {Promise<Asset[]>} The Assets\n */\nexport async function getAssets() {\n    return _assets;\n}\n/**\n * Remove all Assets from memory model\n * @category Assets\n */\nexport async function clearAssets() { _assets = []; }\n//#endregion\n//#region Traits\n/**\n * Add a Trait to memory model\n * @category Traits\n * @param {Trait} trait The Trait to add\n */\nexport async function addTrait(trait) {\n    var item = new Trait(trait);\n    _traits.push(item);\n    return item;\n}\n/**\n * Remove a Trait from memory model\n * @category Traits\n * @param {Trait} trait The Trait to remove\n */\nexport async function removeTrait(trait) {\n    _traits = _traits.filter(t => t !== trait);\n}\n/**\n * Get a Trait from memory model\n * @category Traits\n * @param {Trait} trait The Trait to find\n * @returns The Trait\n */\nexport async function getTrait(id) {\n    return _traits.find(t => t.id === id);\n}\n/**\n * Get all Traits from memory model\n * @category Traits\n * @returns {Trait[]} The Traits\n */\nexport async function getTraits() {\n    return _traits;\n}\n/**\n * Remove all Traits from memory model\n * @category Traits\n */\nexport async function clearTraits() { _traits = []; }\n//#endregion\n//#region Collections\n/**\n * Add a Collection\n * @category Collections\n * @param {Collection} collection Add a Collection\n * @returns {Collection} The Collections\n */\nexport async function addCollection(collection) {\n    var item = new Collection(collection);\n    _collections.push(item);\n    return item;\n}\n/**\n * Get a Collection\n * @category Collections\n * @param {string} id The collection to get\n * @returns {Collection | undefined} The Collection\n */\nexport async function getCollection(id) {\n    return _collections.find(c => c.id === id);\n}\n/**\n * Get all Collections\n * @category Collections\n * @returns {Collection[]} The Collections\n */\nexport async function getCollections() {\n    return _collections;\n}\n/**\n * Remove a Collection\n * @category Collections\n * @param {Collection} collection The Collection to be removed\n */\nexport async function removeCollection(collection) {\n    _collections = _collections.filter(t => t !== collection);\n}\n/**\n * Remove all Collections\n * @category Collections\n */\nexport async function clearCollections() {\n    _collections = [];\n}\n//#endregion\n//#region Animations\nfunction setAnimationTemplate(animationTemplateMap) {\n    if (!_animationManager) {\n        _animationManager = new AnimationManager();\n    }\n    _animationManager.setAnimationTemplate(animationTemplateMap);\n}\nfunction getAnimationManager() {\n    if (!_animationManager) {\n        _animationManager = new AnimationManager();\n    }\n    return _animationManager;\n}\n//#endregion\n//#region Events Wrap Helpers\nfunction on(name, handler) {\n    _events.addListener(name, handler);\n}\nfunction off(name, handler) {\n    _events.removeListener(name, handler);\n}\nfunction isReady() {\n    return _ready;\n}\n/**\n * Called by the Ordinal when it's setup is done.\n */\nasync function ready() {\n    _ready = true;\n    // TODO Review. This is to not load the default variant, but the one specified in the URL.\n    let variantToShow = _requestParams.get('variant');\n    if (variantToShow) {\n        setDisplayedVariant(variantToShow);\n    }\n    else if (_variants.length > 0) {\n        setDisplayedVariant(_variants[0]);\n    }\n    /* TODO\n    if (_requestParams.has('animation')) {\n    }\n    */\n    /* TODO Figure out this one.\n    ** Display a given composition instead of a variant?\n    if (_requestParams.has('composition')) {\n    }\n    */\n    _events.emit(\"ready\");\n}\n//#endregion\n//#region General Helpers\n/**\n * Extracts the inscription ID from the current URL.\n *\n * @returns {string} - The inscription ID extracted from the URL, or an empty string if the URL is invalid.\n */\nfunction getInscriptionIdFromUrl() {\n    // Split the URL path into parts using \"/\" as the delimiter\n    const parts = window.location.pathname.split(\"/\");\n    const lookFor = ['content', 'preview', 'inscription'];\n    // Check if the URL contains any known parts and get ID\n    if (parts.some(item => lookFor.includes(item))) {\n        return parts[parts.length - 1]; // Return the last part as the inscription ID\n    }\n    else {\n        // Log an error message if the URL does not contain a valid inscription ID\n        return \"\"; // Return an empty string if the URL is invalid\n    }\n}\n/**\n * Extracts URL parameters and stores them in a global request parameters map.\n */\nfunction getURLParams() {\n    try {\n        // Create a URLSearchParams object from the query string of the current URL\n        const searchParams = new URLSearchParams(window.location.search);\n        // Iterate over each key-value pair in the URL parameters\n        searchParams.forEach((value, key) => {\n            // Convert both key and value to lowercase and store them in the global _requestParams map\n            _requestParams.set(key.toLowerCase(), value.toLowerCase());\n        });\n    }\n    catch (error) {\n        // Log an error message if an exception occurs while parsing URL parameters\n        console.error(\"Error parsing URL parameters:\", error);\n    }\n}\nfunction getBaseUrl() {\n    const parts = window.location.pathname.split(\"/\");\n    const lookFor = ['content', 'preview', 'inscription', 'r'];\n    let urlOut = [];\n    if (parts.some(item => lookFor.includes(item))) {\n        for (let index = 0; index < parts.length; index++) {\n            if (lookFor.includes(parts[index]))\n                break;\n            urlOut.push(parts[index]);\n        }\n        return urlOut.join(\"/\");\n    }\n    else {\n        return window.location.origin;\n    }\n}\nfunction prepareUrl(url, baseUrl) {\n    if (url.includes(\"http\"))\n        return url;\n    return `${baseUrl}${url}`;\n}\n//#endregion\n//#region On Load Triggers\n_baseUrl = getBaseUrl();\ngetURLParams();\n//#endregion\n//# sourceMappingURL=OOAPI.Core.js.map","/*!\n * Open Ordinal API\n *\n * @author   Open Ordinal <https://openordinal.dev>\n * @license  MIT\n * @module   OOAPI\n */\nimport * as OOAPI from './OOAPI.Core.js';\nexport * from './OOAPI.Core.js';\n/**\n * Assign OOAPI to window\n */\nwindow.ooAPI = OOAPI;\n//# sourceMappingURL=OOAPI.js.map"],"names":["leafPrototypes","getProto","Object","defineProperty","exports","value","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","module","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","obj","t","mode","__esModule","then","ns","r","def","current","indexOf","forEach","d","definition","o","prop","hasOwnProperty","Symbol","toStringTag","ExportType","OrdinalType","AudioType","SpriteType","getExportType","ex","Blob","BLOB","startsWith","DATA","ORDINAL","Exportable","constructor","onExport","canExport","exported","URL","createObjectURL","RENDERER","Variant","options","super","id","onDisplay","onHide","show","frame","document","createElement","src","frameBorder","style","border","outline","overflow","width","height","top","left","bottom","right","margin","padding","zIndex","scrolling","body","appendChild","hide","innerHTML","Composition","Asset","data","async","getType","getName","getId","getData","Trait","Ordinal","transactionStamp","info","metaData","getTransactionStamp","getInfo","getMetaData","audioData","url","getUrl","Image","description","getWidth","getHeight","getDescription","Video","duration","format","resolution","getDuration","getFormat","getResolution","SpriteAnimation","frames","loop","Sprite","spriteData","rows","cells","offset","x","y","GridByCell","source","sourceExport","actions","Collection","collectionTraits","map","trait","CollectionTrait","addTraitCategory","category","traitNames","decoders","Track","title","artists","release","Release","audioURL","_loaded","mm","_load","_id","track","getLatestId","metadata","getMetadata","tm","media","releases","rel","load","assign","parents","getParentsAll","artist","art","Artist","loadData","decoder","decode","import","default","getDecoder","encodedData","fetch","decodedData","arrayBuffer","audioBuffer","wavData","sample","numOfChan","numberOfChannels","buffer","ArrayBuffer","view","DataView","channels","pos","setUint32","setUint16","sampleRate","getChannelData","Math","max","min","setInt16","encodeWAV","blob","audio","Audio","onloadedmetadata","cached","date","Date","coverURL","tracks","md","_tracks","inscription","getInscription","timestamp","cover","fallbackCover","year","getFullYear","totalDuration","tra","getChildrenAll","releaseTypes","types","flatMap","srcEnd","TextDecoder","EMPTY_ARRAY","RECORD_DEFINITIONS_ID","RECORD_INLINE_ID","BUNDLED_STRINGS_ID","STOP_CODE","currentStructures","srcString","bundledStrings","referenceMap","packedValues","dataView","restoreMapsAsObject","maxArraySize","maxMapSize","strings","stringPosition","currentDecoder","srcStringStart","srcStringEnd","currentExtensions","currentExtensionRanges","defaultOptions","useRecords","mapsAsObjects","sequentialMode","inlineObjectReadThreshold","Infinity","Decoder","keyMap","_keyMap","getStructures","getShared","structures","uninitialized","mapKey","Map","k","v","entries","decodeKey","encodeKey","encodeKeys","rec","decodeKeys","_mapKey","res","safeKey","has","mapDecode","end","saveState","clearSource","byteOffset","byteLength","Uint8Array","sharedValues","pack","maxPrivatePackedValues","checkedRead","decodeMultiple","values","lastPosition","size","defaultDecoder","result","read","postBundlePosition","incomplete","token","majorType","byte0","byte1","exponent","NaN","abs","u8Array","f32Array","getFloat16","getUint16","getFloat32","useFloat32","multiplier","mult10","getUint32","getFloat64","int64AsNumber","getBigUint64","array","join","Buffer","object","copyBuffers","subarray","string","shortStringInJS","longStringInJS","readFixedString","structure","createStructureReader","readJustLength","recordDefinition","bundlePosition","bundleLength","dataPosition","readStringJS","position0","position1","readBundleExt","loadShared","extension","handlesRead","input","Tag","packedValue","getPackedValues","validName","slowReads","compiledReader","propertyCount","next","test","JSON","stringify","toString","units","byte2","byte3","unit","fromCharCode","start","bytes","byte","a","b","c","e","f","g","h","j","l","Float32Array","tag","dateString","epochSec","round","BigInt","fraction","exp","log","existingStructure","isShared","restoreStructures","glbl","RegExp","packedTable","newPackedValues","prefixes","suffixes","combine","startingPosition","refEntry","targetProperties","used","Set","version","isLittleEndianMachine","Uint16Array","typedArrays","Uint8ClampedArray","Uint32Array","BigUint64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","Float64Array","typedArrayTags","registerTypedArray","TypedArray","bytesPerElement","dvMethod","BYTES_PER_ELEMENT","littleEndian","sizeShift","dv","elements","ta","method","sharedData","updatedStructures","sharedVersion","splice","callback","savedSrcEnd","savedPosition","savedStringPosition","savedSrcStringStart","savedSrcStringEnd","savedSrcString","savedStrings","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedDecoder","savedSequentialMode","floor","textEncoder","extensions","extensionClasses","TextEncoder","globalThis","hasNodeBuffer","ByteArrayAllocate","allocUnsafeSlow","ByteArray","MAX_BUFFER_SIZE","throwOnIterable","targetView","safeEnd","hasNonLatin","RECORD_SYMBOL","Encoder","sharedStructures","hasSharedUpdate","encodeUtf8","utf8Write","maxBytes","encodeInto","written","encoder","hasSharedStructures","saveStructures","maxSharedStructures","isSequential","sequential","saveShared","samplingPackedValues","packedObjectMap","sharedPackedObjectMap","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","mapEncode","encodeOptions","_mapped","encode","REUSE_BUFFER_MODE","useSelfDescribedHeader","structuredClone","bundleStrings","sharedStructuresLength","transitions","nextTransition","transition","nextId","maxValues","objectMap","findRepetitiveStrings","writeArrayHeader","valuesArray","THROW_ON_ITERABLE","writeBundles","idsToInsert","makeRoom","serialized","distanceToMove","lastEnd","sort","referee","references","copyWithin","insertIds","returnBuffer","updateSharedData","RESET_BUFFER_MODE","findCommonStringsToPack","threshold","status","packedPosition","headerSize","strLength","extStart","twoByte","c1","c2","strPosition","charCodeAt","alwaysUseFloat","xShifted","setFloat32","setFloat64","writeObject","useTag259ForMaps","entryValue","getTag","iterator","iteratorNotHandled","entry","asyncIterator","isBlob","useToJSON","toJSON","json","setBigUint64","largeBigIntToFloat","writeBuffer","reverse","variableMapSize","vals","objectOffset","skipValues","parentRecordId","newTransitions","recordId","__keys__","newSize","newBuffer","chunkThreshold","continuedChunkThreshold","encodeObjectAsIterable","iterateProperties","finalIterable","writeEntityLength","tryEncode","element","restartEncoding","restart","startEncoding","encodeIterable","encodeObjectAsAsyncIterable","encodedValue","reader","stream","getReader","done","asyncValue","encodeAsIterable","encodeAsAsyncIterable","useBuffer","clearSharedData","lastVersion","structuresCopy","SharedData","saveResults","existingShared","majorValue","BlobConstructor","packedStatus","includeKeys","typedArrayEncoder","typedArray","from","writeStrings","seconds","getTime","useTimestamp32","getMilliseconds","regex","tagUint8Array","definitions","defaultEncoder","NEVER","ALWAYS","DECIMAL_ROUND","DECIMAL_FIT","_currentVariant","_baseUrl","_collections","_variants","_compositions","_assets","_traits","_type","MULTI","_requestParams","_metadata","setId","parts","window","location","pathname","split","lookFor","some","item","includes","getInscriptionIdFromUrl","setType","setMetadata","getRequestParams","getInscriptionMetadata","inscriptionId","baseUrl","response","prepareUrl","ok","dataCBORasHexString","dataAsBuffer","match","hex","parseInt","getSatAt","sat","getSatPage","page","ids","more","getSatAll","catch","getParentsPage","getChildrenPage","getOOMD","getAll","children","satIds","getBlockInfo","blockInfo","getBlockHash","getBlockHeight","text","getBlockTime","time","getLatestPath","path","prefix","substring","isOrdinalAPIExtensionsAvailable","headers","getOrdinalApiFromIFrame","iframe","checkIframeLoaded","iframeDoc","contentDocument","contentWindow","readyState","setTimeout","ordinal","whenLoaded","ooAPi","ooAPI","isReady","onload","importLatest","latestPath","fetchLatest","func","cache","promise","addVariant","variant","removeVariant","filter","getVariant","find","getVariants","clearVariants","setDisplayedVariant","nextVariant","idx","getDisplayedVariant","addComposition","composition","removeComposition","getComposition","getCompositions","clearCompositions","addAsset","asset","removeAsset","getAsset","getAssets","clearAssets","addTrait","removeTrait","getTrait","getTraits","clearTraits","addCollection","collection","getCollection","getCollections","removeCollection","clearCollections","urlOut","origin","getBaseUrl","URLSearchParams","search","toLowerCase","getURLParams"],"sourceRoot":""}